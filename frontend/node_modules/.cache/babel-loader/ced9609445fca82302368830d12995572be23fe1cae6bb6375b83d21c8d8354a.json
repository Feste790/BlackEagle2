{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karol\\\\source\\\\repos\\\\Feste790\\\\BlackEagle-New\\\\Black-Eagle\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Login from './login';\nimport Register from './register';\nimport Movies from './movies';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n      // Pobierz filmy po uwierzytelnieniu\n      const fetchMovies = async () => {\n        try {\n          const response = await fetch(`${apiUrl}/movies`, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (!response.ok) {\n            throw new Error('B��d pobierania film�w');\n          }\n          const data = await response.json();\n          setMovies(data);\n        } catch (err) {\n          console.error('B��d pobierania film�w:', err);\n          setMovies([]);\n        }\n      };\n      fetchMovies();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            setIsAuthenticated: setIsAuthenticated,\n            apiUrl: apiUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            setIsAuthenticated: setIsAuthenticated,\n            apiUrl: apiUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies\",\n          element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Movies, {\n            filteredMovies: movies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ZGmXCYgaRZ4WjDI1F6nk0vyuyTE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Login","Register","Movies","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","movies","setMovies","apiUrl","process","env","REACT_APP_API_URL","token","localStorage","getItem","fetchMovies","response","fetch","method","headers","Authorization","ok","Error","data","json","err","console","error","className","children","path","element","to","fileName","_jsxFileName","lineNumber","columnNumber","filteredMovies","_c","$RefreshReg$"],"sources":["C:/Users/karol/source/repos/Feste790/BlackEagle-New/Black-Eagle/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport Login from './login';\r\nimport Register from './register';\r\nimport Movies from './movies';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [movies, setMovies] = useState([]);\r\n    const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            setIsAuthenticated(true);\r\n            // Pobierz filmy po uwierzytelnieniu\r\n            const fetchMovies = async () => {\r\n                try {\r\n                    const response = await fetch(`${apiUrl}/movies`, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            Authorization: `Bearer ${token}`,\r\n                        },\r\n                    });\r\n                    if (!response.ok) {\r\n                        throw new Error('B��d pobierania film�w');\r\n                    }\r\n                    const data = await response.json();\r\n                    setMovies(data);\r\n                } catch (err) {\r\n                    console.error('B��d pobierania film�w:', err);\r\n                    setMovies([]);\r\n                }\r\n            };\r\n            fetchMovies();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Router>\r\n                <Routes>\r\n                    <Route path=\"/\" element={<Navigate to=\"/login\" />} />\r\n                    <Route\r\n                        path=\"/login\"\r\n                        element={<Login setIsAuthenticated={setIsAuthenticated} apiUrl={apiUrl} />}\r\n                    />\r\n                    <Route\r\n                        path=\"/register\"\r\n                        element={<Register setIsAuthenticated={setIsAuthenticated} apiUrl={apiUrl} />}\r\n                    />\r\n                    <Route\r\n                        path=\"/movies\"\r\n                        element={\r\n                            isAuthenticated ? (\r\n                                <Movies filteredMovies={movies} />\r\n                            ) : (\r\n                                <Navigate to=\"/login\" />\r\n                            )\r\n                        }\r\n                    />\r\n                </Routes>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}