{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MovieDetails(_ref){var _movie$imdb_votes;let{apiUrl}=_ref;const{id}=useParams();const[movie,setMovie]=useState(null);const[error,setError]=useState('');const formatPolishDate=dateString=>{if(!dateString)return'';const date=new Date(dateString);const months=['Stycznia','Lutego','Marca','Kwietnia','Maja','Czerwca','Lipca','Sierpnia','Września','Października','Listopada','Grudnia'];const day=date.getDate();const month=months[date.getMonth()];const year=date.getFullYear();return`${day} ${month} ${year}`;};useEffect(()=>{const fetchMovie=async()=>{try{const token=localStorage.getItem('access_token');if(!token){throw new Error('Brak tokenu autoryzacji');}const response=await fetch(`${apiUrl}/movies`,{method:'GET',headers:{'Content-Type':'application/json',Authorization:`Bearer ${token}`}});if(!response.ok){throw new Error(`Błąd pobierania filmu: ${response.status}`);}const data=await response.json();const selectedMovie=data.find(movie=>movie.movie_id===parseInt(id));if(!selectedMovie){throw new Error('Film nie znaleziony');}setMovie(selectedMovie);}catch(err){setError('Wystąpił błąd: '+err.message);console.error('Fetch error:',err);}};fetchMovie();},[apiUrl,id]);if(error)return/*#__PURE__*/_jsx(\"p\",{style:{color:'#f5c518',textAlign:'center'},children:error});if(!movie)return/*#__PURE__*/_jsx(\"p\",{style:{color:'#f5c518',textAlign:'center'},children:\"\\u0141adowanie...\"});return/*#__PURE__*/_jsxs(\"div\",{className:\"movie-details\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"movie-details-poster\",src:movie.poster||'https://via.placeholder.com/200x300',alt:movie.title||'Brak tytułu'}),/*#__PURE__*/_jsxs(\"div\",{className:\"movie-details-info\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"TitleDetails\",children:movie.title||'Brak tytułu'}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Data premiery:\"}),\" \",formatPolishDate(movie.released)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Rok produkcji:\"}),\" \",movie.prod_year||'Brak danych']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Oznaczenie wiekowe:\"}),\" \",movie.rated||'Brak danych']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"D\\u0142ugo\\u015B\\u0107 trwania:\"}),\" \",movie.runtime||'Brak danych',\" min\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Kraj pochodzenia:\"}),\" \",movie.country||'Brak danych']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Box Office:\"}),\" \",movie.box_office||'Brak danych']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"IMDb:\"}),\" \",movie.imdb_rating||'Brak danych',\" / 10 (\",((_movie$imdb_votes=movie.imdb_votes)===null||_movie$imdb_votes===void 0?void 0:_movie$imdb_votes.toLocaleString())||0,\" g\\u0142os\\xF3w)\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Metacritic:\"}),' ',movie.metacritic?`${movie.metacritic}/100`:'Brak danych']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Rotten Tomatoes:\"}),' ',movie.rotten_tomatoes?`${movie.rotten_tomatoes}%`:'Brak danych']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Nagrody:\"}),\" \",movie.awards||'Brak danych']}),/*#__PURE__*/_jsx(\"p\",{className:\"movie-description-watched\",children:movie.plot||'Brak opisu'})]})]});}export default MovieDetails;","map":{"version":3,"names":["React","useState","useEffect","useParams","jsx","_jsx","jsxs","_jsxs","MovieDetails","_ref","_movie$imdb_votes","apiUrl","id","movie","setMovie","error","setError","formatPolishDate","dateString","date","Date","months","day","getDate","month","getMonth","year","getFullYear","fetchMovie","token","localStorage","getItem","Error","response","fetch","method","headers","Authorization","ok","status","data","json","selectedMovie","find","movie_id","parseInt","err","message","console","style","color","textAlign","children","className","src","poster","alt","title","released","prod_year","rated","runtime","country","box_office","imdb_rating","imdb_votes","toLocaleString","metacritic","rotten_tomatoes","awards","plot"],"sources":["C:/Users/karol/source/repos/Feste790/BlackEagle-New/Black-Eagle/frontend/src/MovieDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nfunction MovieDetails({ apiUrl }) {\r\n    const { id } = useParams();\r\n    const [movie, setMovie] = useState(null);\r\n    const [error, setError] = useState('');\r\n\r\n    const formatPolishDate = (dateString) => {\r\n        if (!dateString) return '';\r\n\r\n        const date = new Date(dateString);\r\n        const months = [\r\n            'Stycznia', 'Lutego', 'Marca', 'Kwietnia', 'Maja', 'Czerwca',\r\n            'Lipca', 'Sierpnia', 'Września', 'Października', 'Listopada', 'Grudnia',\r\n        ];\r\n\r\n        const day = date.getDate();\r\n        const month = months[date.getMonth()];\r\n        const year = date.getFullYear();\r\n\r\n        return `${day} ${month} ${year}`;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchMovie = async () => {\r\n            try {\r\n                const token = localStorage.getItem('access_token');\r\n                if (!token) {\r\n                    throw new Error('Brak tokenu autoryzacji');\r\n                }\r\n                const response = await fetch(`${apiUrl}/movies`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error(`Błąd pobierania filmu: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                const selectedMovie = data.find(movie => movie.movie_id === parseInt(id));\r\n                if (!selectedMovie) {\r\n                    throw new Error('Film nie znaleziony');\r\n                }\r\n                setMovie(selectedMovie);\r\n            } catch (err) {\r\n                setError('Wystąpił błąd: ' + err.message);\r\n                console.error('Fetch error:', err);\r\n            }\r\n        };\r\n        fetchMovie();\r\n    }, [apiUrl, id]);\r\n\r\n    if (error) return <p style={{ color: '#f5c518', textAlign: 'center' }}>{error}</p>;\r\n    if (!movie) return <p style={{ color: '#f5c518', textAlign: 'center' }}>Ładowanie...</p>;\r\n\r\n    return (\r\n        <div className=\"movie-details\">\r\n            <img\r\n                className=\"movie-details-poster\"\r\n                src={movie.poster || 'https://via.placeholder.com/200x300'}\r\n                alt={movie.title || 'Brak tytułu'}\r\n            />\r\n            <div className=\"movie-details-info\">\r\n                <h2 className=\"TitleDetails\">{movie.title || 'Brak tytułu'}</h2>\r\n                <p>\r\n                    <strong>Data premiery:</strong> {formatPolishDate(movie.released)}\r\n                </p>\r\n                <p>\r\n                    <strong>Rok produkcji:</strong> {movie.prod_year || 'Brak danych'}\r\n                </p>\r\n                <p>\r\n                    <strong>Oznaczenie wiekowe:</strong> {movie.rated || 'Brak danych'}\r\n                </p>\r\n                <p>\r\n                    <strong>Długość trwania:</strong> {movie.runtime || 'Brak danych'} min\r\n                </p>\r\n                <p>\r\n                    <strong>Kraj pochodzenia:</strong> {movie.country || 'Brak danych'}\r\n                </p>\r\n                <p>\r\n                    <strong>Box Office:</strong> {movie.box_office || 'Brak danych'}\r\n                </p>\r\n                <p>\r\n                    <strong>IMDb:</strong> {movie.imdb_rating || 'Brak danych'} / 10 (\r\n                    {movie.imdb_votes?.toLocaleString() || 0} głosów)\r\n                </p>\r\n                <p>\r\n                    <strong>Metacritic:</strong>{' '}\r\n                    {movie.metacritic ? `${movie.metacritic}/100` : 'Brak danych'}\r\n                </p>\r\n                <p>\r\n                    <strong>Rotten Tomatoes:</strong>{' '}\r\n                    {movie.rotten_tomatoes ? `${movie.rotten_tomatoes}%` : 'Brak danych'}\r\n                </p>\r\n                <p>\r\n                    <strong>Nagrody:</strong> {movie.awards || 'Brak danych'}\r\n                </p>\r\n                <p className=\"movie-description-watched\">{movie.plot || 'Brak opisu'}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}