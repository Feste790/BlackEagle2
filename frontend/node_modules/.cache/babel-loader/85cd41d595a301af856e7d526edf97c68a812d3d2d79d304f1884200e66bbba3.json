{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karol\\\\source\\\\repos\\\\Feste790\\\\BlackEagle-New\\\\Black-Eagle\\\\frontend\\\\src\\\\Watched.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Watched = ({\n  filteredMovies,\n  apiUrl\n}) => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchWatchedMovies = async () => {\n      try {\n        const token = localStorage.getItem('access_token');\n        if (!token) {\n          throw new Error('Brak tokenu autoryzacji');\n        }\n        const response = await fetch(`${apiUrl}/watched`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Błąd przy pobieraniu danych: ${response.status}`);\n        }\n        const data = await response.json();\n        setMovies(data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchWatchedMovies();\n  }, [apiUrl]);\n  const formatPolishDate = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    const months = ['Stycznia', 'Lutego', 'Marca', 'Kwietnia', 'Maja', 'Czerwca', 'Lipca', 'Sierpnia', 'Września', 'Października', 'Listopada', 'Grudnia'];\n    const day = date.getDate();\n    const month = months[date.getMonth()];\n    const year = date.getFullYear();\n    return `${day} ${month} ${year}`;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: '#f5c518',\n      textAlign: 'center'\n    },\n    children: \"\\u0141adowanie...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: '#f5c518',\n      textAlign: 'center'\n    },\n    children: [\"B\\u0142\\u0105d: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 23\n  }, this);\n  const displayMovies = movies.length > 0 ? movies : filteredMovies;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"watched-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header_text_watched\",\n      children: \"Obejrzane Filmy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list-watched\",\n      children: displayMovies.map((movie, i) => {\n        var _movie$imdb_votes;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-item-watched\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/movie/${movie.movie_id}`,\n            className: \"movie-poster-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"movie-poster-watched\",\n              src: movie.poster || 'https://via.placeholder.com/150x220',\n              alt: movie.title || 'Brak tytułu'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-details-watched\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: movie.title || 'Brak tytułu'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Data premiery:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this), \" \", formatPolishDate(movie.released)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"D\\u0142ugo\\u015B\\u0107 trwania:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), \" \", movie.runtime || 'Brak danych', \" min\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Kraj pochodzenia:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), \" \", movie.country || 'Brak danych']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"IMDb:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), \" \", movie.imdb_rating || 'Brak danych', \" / 10 (\", ((_movie$imdb_votes = movie.imdb_votes) === null || _movie$imdb_votes === void 0 ? void 0 : _movie$imdb_votes.toLocaleString()) || 0, \" g\\u0142os\\xF3w)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"movie-description-watched\",\n              children: movie.plot || 'Brak opisu'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, movie.movie_id || i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Watched, \"6wevkd2F3PCn4cJR5qV0d4ozTn8=\");\n_c = Watched;\nexport default Watched;\nvar _c;\n$RefreshReg$(_c, \"Watched\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","Watched","filteredMovies","apiUrl","_s","movies","setMovies","loading","setLoading","error","setError","fetchWatchedMovies","token","localStorage","getItem","Error","response","fetch","method","headers","Authorization","ok","status","data","json","err","message","formatPolishDate","dateString","date","Date","months","day","getDate","month","getMonth","year","getFullYear","style","color","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","displayMovies","length","className","map","movie","i","_movie$imdb_votes","to","movie_id","src","poster","alt","title","released","runtime","country","imdb_rating","imdb_votes","toLocaleString","plot","_c","$RefreshReg$"],"sources":["C:/Users/karol/source/repos/Feste790/BlackEagle-New/Black-Eagle/frontend/src/Watched.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nconst Watched = ({ filteredMovies, apiUrl }) => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchWatchedMovies = async () => {\r\n            try {\r\n                const token = localStorage.getItem('access_token');\r\n                if (!token) {\r\n                    throw new Error('Brak tokenu autoryzacji');\r\n                }\r\n                const response = await fetch(`${apiUrl}/watched`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error(`Błąd przy pobieraniu danych: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                setMovies(data);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                setError(err.message);\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchWatchedMovies();\r\n    }, [apiUrl]);\r\n\r\n    const formatPolishDate = (dateString) => {\r\n        if (!dateString) return '';\r\n\r\n        const date = new Date(dateString);\r\n        const months = [\r\n            'Stycznia', 'Lutego', 'Marca', 'Kwietnia', 'Maja', 'Czerwca',\r\n            'Lipca', 'Sierpnia', 'Września', 'Października', 'Listopada', 'Grudnia',\r\n        ];\r\n\r\n        const day = date.getDate();\r\n        const month = months[date.getMonth()];\r\n        const year = date.getFullYear();\r\n\r\n        return `${day} ${month} ${year}`;\r\n    };\r\n\r\n    if (loading) return <p style={{ color: '#f5c518', textAlign: 'center' }}>Ładowanie...</p>;\r\n    if (error) return <p style={{ color: '#f5c518', textAlign: 'center' }}>Błąd: {error}</p>;\r\n\r\n    const displayMovies = movies.length > 0 ? movies : filteredMovies;\r\n\r\n    return (\r\n        <div className=\"watched-container\">\r\n            <h1 className=\"header_text_watched\">Obejrzane Filmy</h1>\r\n            <div className=\"movie-list-watched\">\r\n                {displayMovies.map((movie, i) => (\r\n                    <div className=\"movie-item-watched\" key={movie.movie_id || i}>\r\n                        <Link to={`/movie/${movie.movie_id}`} className=\"movie-poster-container\">\r\n                            <img\r\n                                className=\"movie-poster-watched\"\r\n                                src={movie.poster || 'https://via.placeholder.com/150x220'}\r\n                                alt={movie.title || 'Brak tytułu'}\r\n                            />\r\n                        </Link>\r\n                        <div className=\"movie-details-watched\">\r\n                            <h2>{movie.title || 'Brak tytułu'}</h2>\r\n                            <p>\r\n                                <strong>Data premiery:</strong> {formatPolishDate(movie.released)}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Długość trwania:</strong> {movie.runtime || 'Brak danych'} min\r\n                            </p>\r\n                            <p>\r\n                                <strong>Kraj pochodzenia:</strong> {movie.country || 'Brak danych'}\r\n                            </p>\r\n                            <p>\r\n                                <strong>IMDb:</strong> {movie.imdb_rating || 'Brak danych'} / 10 (\r\n                                {movie.imdb_votes?.toLocaleString() || 0} głosów)\r\n                            </p>\r\n                            <p className=\"movie-description-watched\">{movie.plot || 'Brak opisu'}</p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Watched;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}